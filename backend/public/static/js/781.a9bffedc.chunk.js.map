{"version":3,"file":"static/js/781.a9bffedc.chunk.js","mappings":"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","sources":["../node_modules/@coreui/icons/js/free/cil-check-alt.js","../node_modules/@coreui/icons/js/free/cil-x-circle.js","views/ViewBookings.jsx","../node_modules/@coreui/icons/js/free/cil-pencil.js"],"sourcesContent":["export const cilCheckAlt = [\"512 512\",\"<polygon fill='var(--ci-primary-color, currentColor)' points='200.359 382.269 61.057 251.673 82.943 228.327 199.641 337.731 428.686 108.687 451.314 131.313 200.359 382.269' class='ci-primary'/>\"]","export const cilXCircle = [\"512 512\",\"<polygon fill='var(--ci-primary-color, currentColor)' points='348.071 141.302 260.308 229.065 172.545 141.302 149.917 163.929 237.681 251.692 149.917 339.456 172.545 362.083 260.308 274.32 348.071 362.083 370.699 339.456 282.935 251.692 370.699 163.929 348.071 141.302' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M425.706,86.294A240,240,0,0,0,86.294,425.706,240,240,0,0,0,425.706,86.294ZM256,464C141.309,464,48,370.691,48,256S141.309,48,256,48s208,93.309,208,208S370.691,464,256,464Z' class='ci-primary'/>\"]","import { cilCheckAlt, cilPencil, cilXCircle } from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport { CButton, CCard, CCardBody, CCol, CContainer, CForm, CFormInput, CFormLabel, CRow, CTable, CTableBody, CTableDataCell, CTableHead, CTableHeaderCell, CTableRow } from '@coreui/react'\nimport moment from 'moment'\nimport React, { useEffect, useState } from 'react'\nimport { AppDatePicker } from 'src/components'\nimport { useReservationStore, useRoomStore } from 'src/hooks'\nimport { useForm } from 'src/hooks/useForm'\nimport Swal from 'sweetalert2'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst ViewBookings = () => {\n  const { reservations = [], activeReservations, startLoadingReservations, setActiveReservation, startSavingReservation } = useReservationStore()\n  const { rooms, startFindRooms } = useRoomStore()\n\n  const [visibleRegister, setVisibleRegister] = useState(false)\n  const [validated, setValidated] = useState(false)\n  const [formState, onChangeForm, onResetForm, onLoaderForm] = useForm({\n    _id: undefined,\n    checkInDate: null,\n    checkOutDate: null,\n    roomType: '',\n    guestName: '',\n    guestEmail: '',\n    guestPhone: '',\n    emergencyContactName: '',\n    emergencyContactPhone: '',\n    totalPrice: 0,\n    paid: false,\n    state: null,\n  })\n  const { checkInDate, checkOutDate, guestName, guestEmail, guestPhone, emergencyContactName, emergencyContactPhone, state, paid, totalPrice } = formState\n\n  const handle_Cancel = () => {\n    Swal.fire({\n      title: '¿Desea regresar y descartar los cambios?',\n      showDenyButton: true,\n      icon: 'question',\n      confirmButtonText: 'Continuar',\n      denyButtonText: `Cancelar`,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        onResetForm()\n        setVisibleRegister(false)\n        setValidated(false)\n      }\n    })\n  }\n\n  const handle_Save = (e) => {\n    const form = e.currentTarget\n    e.preventDefault()\n    if (form.checkValidity() === false) {\n      e.stopPropagation()\n    } else {\n      Swal.fire({\n        title: '¿Desea guardar los cambios?',\n        showDenyButton: true,\n        icon: 'question',\n        confirmButtonText: 'Continuar',\n        denyButtonText: `Cancelar`,\n      }).then((result) => {\n        if (result.isConfirmed) {\n          startSavingReservation({ ...formState, checkInDate: checkInDate.toISOString(), checkOutDate: checkOutDate.toISOString(), totalPrice: getTotalPrice() })\n          onResetForm()\n          setVisibleRegister(false)\n          setValidated(false)\n        }\n      })\n    }\n    setValidated(true)\n  }\n\n  const handle_LoadUpdate = (data) => {\n    setVisibleRegister(true)\n    setValidated(false)\n    onLoaderForm({ ...data, checkInDate: new Date(data.checkInDate), checkOutDate: new Date(data.checkOutDate) })\n    startFindRooms({ _id: data.room })\n  }\n\n  const handle_ConfirmAndCanceled = (item) => {\n    Swal.fire({\n      title: `¿Desea ${item.state === 'Cancelada' ? 'cancelar' : 'confirmar'} esta reserva?`,\n      showDenyButton: true,\n      icon: 'question',\n      confirmButtonText: 'Continuar',\n      denyButtonText: `Cancelar`,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const checkIn = visibleRegister ? checkInDate.toISOString() : item.checkInDate\n        const checkOut = visibleRegister ? checkOutDate.toISOString() : item.checkOutDate\n        const jsonData = { ...item, checkInDate: checkIn, checkOutDate: checkOut, totalPrice: getTotalPrice(), paid: true, confirm: true }\n        startSavingReservation(jsonData)\n        handle_LoadUpdate(jsonData)\n        startLoadingReservations()\n      }\n    })\n  }\n\n  const getDifferenceDay = () => {\n    if (!checkOutDate || !checkInDate) {\n      return -1\n    }\n    let difference = checkOutDate.getTime() - checkInDate.getTime()\n    return Math.ceil(difference / (1000 * 3600 * 24))\n  }\n\n  const getTotalPrice = () => {\n    const difference = getDifferenceDay()\n    return difference <= 0 ? totalPrice : difference * (rooms.length ? rooms[0]?.price : 0)\n  }\n\n  useEffect(() => {\n    startLoadingReservations()\n  }, [])\n\n  useEffect(() => {\n    if (!!activeReservations && Object.keys(activeReservations).length) {\n      handle_LoadUpdate(activeReservations)\n      // handle_LoadUpdate({ ...activeReservations, checkInDate: new Date(activeReservations.checkInDate), checkOutDate: new Date(activeReservations.checkOutDate) })\n      setActiveReservation({})\n    }\n  }, [activeReservations])\n\n  return (\n    <CCard className=\"mb-4\">\n      <CCardBody>\n        <CRow>\n          <CCol sm={5}>\n            <h4 className=\"card-title mb-3\">RESERVAS</h4>\n          </CCol>\n        </CRow>\n        <CContainer fluid>\n          <CCard className=\"mb-4\">\n            <CCardBody>\n              {!visibleRegister ? (\n                <CContainer fluid>\n                  <CRow>\n                    <CCol xs={12}>\n                      <CTable align=\"middle\" responsive>\n                        <CTableHead>\n                          <CTableRow>\n                            <CTableHeaderCell scope=\"col\">#</CTableHeaderCell>\n                            <CTableHeaderCell scope=\"col\">Fecha de entrada</CTableHeaderCell>\n                            <CTableHeaderCell scope=\"col\">Fecha de salida</CTableHeaderCell>\n                            <CTableHeaderCell scope=\"col\">Cliente</CTableHeaderCell>\n                            <CTableHeaderCell scope=\"col\">Contacto</CTableHeaderCell>\n                            <CTableHeaderCell scope=\"col\">Habitación/Tipo</CTableHeaderCell>\n                            <CTableHeaderCell scope=\"col\">Estado</CTableHeaderCell>\n                          </CTableRow>\n                        </CTableHead>\n                        <CTableBody>\n                          {reservations.map((item, index) => (\n                            <CTableRow key={uuidv4()}>\n                              <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\n                              <CTableDataCell>{moment(item.checkInDate).format('LL')}</CTableDataCell>\n                              <CTableDataCell>{moment(item.checkOutDate).format('LL')}</CTableDataCell>\n                              <CTableDataCell>\n                                {item.guestName}, <b>Tel:</b> {item.guestPhone}\n                                <br />\n                                <b>Email:</b> {item.guestEmail}\n                              </CTableDataCell>\n                              <CTableDataCell>\n                                {item.guestName}, <b>Tel:</b> {item.guestPhone}\n                              </CTableDataCell>\n                              <CTableDataCell>\n                                {item.rooms[0].roomNumber} - {item.rooms[0].type}\n                              </CTableDataCell>\n                              <CTableDataCell>\n                                {!!item.state && (\n                                  <h6 className={`text-${item.state === 'Confirmada' ? 'success' : 'danger'}`}>\n                                    <b>{`${item.state}`.toLocaleUpperCase()}</b>\n                                  </h6>\n                                )}\n                              </CTableDataCell>\n                              <CTableDataCell>\n                                <CButton color=\"info\" variant=\"outline\" className=\"me-1\" onClick={() => handle_LoadUpdate(item)}>\n                                  <CIcon icon={cilPencil} />\n                                </CButton>\n                                {!item.state && (\n                                  <>\n                                    <CButton\n                                      color=\"success\"\n                                      variant=\"outline\"\n                                      className=\"me-1\"\n                                      title=\"Confirmar\"\n                                      onClick={() => {\n                                        handle_ConfirmAndCanceled({ ...item, state: 'Confirmada' })\n                                      }}\n                                    >\n                                      <CIcon icon={cilCheckAlt} />\n                                    </CButton>\n                                    <CButton\n                                      color=\"danger\"\n                                      variant=\"outline\"\n                                      title=\"Cancelar\"\n                                      onClick={() => {\n                                        handle_ConfirmAndCanceled({ ...item, state: 'Cancelada' })\n                                      }}\n                                    >\n                                      <CIcon icon={cilXCircle} />\n                                    </CButton>\n                                  </>\n                                )}\n                              </CTableDataCell>\n                            </CTableRow>\n                          ))}\n                        </CTableBody>\n                      </CTable>\n                    </CCol>\n                  </CRow>\n                </CContainer>\n              ) : (\n                <CForm className=\"row g-3\" validated={validated} onSubmit={handle_Save}>\n                  <CCol xs={6}>\n                    <CRow>\n                      <CCol xs={6}>\n                        <CFormLabel>Fecha de entrada</CFormLabel>\n                        <AppDatePicker name=\"checkInDate\" value={checkInDate} onChange={onChangeForm} disabled={!!state} />\n                      </CCol>\n                      <CCol xs={6}>\n                        <CFormLabel>Fecha de salida</CFormLabel>\n                        <AppDatePicker name=\"checkOutDate\" value={checkOutDate} onChange={onChangeForm} disabled={!!state} />\n                      </CCol>\n                      <CCol xs={6}>\n                        <CFormLabel>Cliente</CFormLabel>\n                        <CFormInput type=\"text\" name=\"guestName\" value={guestName} onChange={onChangeForm} disabled={!!state} />\n                      </CCol>\n                      <CCol xs={6}>\n                        <CFormLabel>Teléfono</CFormLabel>\n                        <CFormInput type=\"text\" name=\"guestPhone\" value={guestPhone} onChange={onChangeForm} disabled={!!state} />\n                      </CCol>\n                      <CCol xs={12}>\n                        <CFormLabel>Correo</CFormLabel>\n                        <CFormInput type=\"text\" name=\"guestEmail\" value={guestEmail} onChange={onChangeForm} disabled={!!state} />\n                      </CCol>\n                      <CCol xs={6}>\n                        <CFormLabel>Nombre de contacto de emergencia</CFormLabel>\n                        <CFormInput type=\"text\" name=\"emergencyContactName\" value={emergencyContactName} onChange={onChangeForm} disabled={!!state} />\n                      </CCol>\n                      <CCol xs={6}>\n                        <CFormLabel>Teléfono de contacto de emergencia</CFormLabel>\n                        <CFormInput type=\"text\" name=\"emergencyContactPhone\" value={emergencyContactPhone} onChange={onChangeForm} disabled={!!state} />\n                      </CCol>\n                    </CRow>\n                  </CCol>\n                  <CCol xs={6}>\n                    <CRow>\n                      <CCol xs={6}>\n                        <CFormLabel>Habitación</CFormLabel>\n                        <br />\n                        <h4>\n                          <b>{rooms[0]?.roomNumber}</b>\n                        </h4>\n                      </CCol>\n                      <CCol xs={6}>\n                        <CFormLabel>Tipo de habitación</CFormLabel>\n                        <br />\n                        <h4>\n                          <b>{rooms[0]?.type}</b>\n                        </h4>\n                      </CCol>\n\n                      <CCol xs={6}>\n                        <CFormLabel>Descripción</CFormLabel>\n                        <br />\n                        <p>\n                          <b>{rooms[0]?.description}</b>\n                        </p>\n                      </CCol>\n                      <CCol xs={6}>\n                        <CFormLabel>Comodidades</CFormLabel>\n                        <br />\n                        <h5>\n                          <b>{rooms[0]?.amenities?.join(', ')}</b>\n                        </h5>\n                      </CCol>\n                      <CCol xs={6}>\n                        <CFormLabel>Pagada</CFormLabel>\n                        <h5>\n                          <b>{paid ? 'Si' : 'No'}</b>\n                        </h5>\n                      </CCol>\n                      <CCol xs={6}>\n                        <CFormLabel>N° de noches</CFormLabel>\n                        <h5>\n                          <b>{getDifferenceDay()}</b>\n                        </h5>\n                      </CCol>\n                      <CCol xs={6}>\n                        {!!state && (\n                          <>\n                            <CFormLabel>Estado</CFormLabel>\n                            <h6 className={`text-${state === 'Confirmada' ? 'success' : 'danger'}`}>\n                              <b>{`${state}`.toLocaleUpperCase()}</b>\n                            </h6>\n                          </>\n                        )}\n                      </CCol>\n                      <CCol xs={6}>\n                        <CFormLabel>Precio</CFormLabel>\n                        <h5>\n                          <b>$ {rooms[0]?.price}</b>\n                        </h5>\n                      </CCol>\n                      <CCol xs={6}></CCol>\n                      <CCol xs={6}>\n                        <CFormLabel>Valor total</CFormLabel>\n                        <h5>\n                          <b>$ {getTotalPrice()}</b>\n                        </h5>\n                      </CCol>\n                    </CRow>\n                  </CCol>\n\n                  <CCol xs={12}>\n                    {!state && (\n                      <>\n                        <CButton\n                          color=\"danger\"\n                          variant=\"outline\"\n                          className=\"float-end  ms-2\"\n                          title=\"Cancelar\"\n                          onClick={() => {\n                            handle_ConfirmAndCanceled({ ...formState, state: 'Cancelada' })\n                          }}\n                        >\n                          <CIcon icon={cilXCircle} />\n                          {` `}\n                          Cancelar reserva\n                        </CButton>\n                        <CButton\n                          color=\"success\"\n                          variant=\"outline\"\n                          className=\"float-end me-1\"\n                          title=\"Confirmar\"\n                          onClick={() => {\n                            handle_ConfirmAndCanceled({ ...formState, state: 'Confirmada' })\n                          }}\n                        >\n                          <CIcon icon={cilCheckAlt} />\n                          {` `}\n                          Confirmar reserva\n                        </CButton>\n\n                        <CButton color=\"info\" className=\"float-start ms-2\" type=\"submit\">\n                          Actualizar datos\n                        </CButton>\n                      </>\n                    )}\n                    <CButton color=\"danger\" className=\"float-start ms-2\" onClick={handle_Cancel}>\n                      Regresar\n                    </CButton>\n                  </CCol>\n                </CForm>\n              )}\n            </CCardBody>\n          </CCard>\n        </CContainer>\n      </CCardBody>\n    </CCard>\n  )\n}\nViewBookings.propTypes = {}\n\nexport default ViewBookings\n","export const cilPencil = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M29.663,482.25l.087.087a24.847,24.847,0,0,0,17.612,7.342,25.178,25.178,0,0,0,8.1-1.345l142.006-48.172,272.5-272.5A88.832,88.832,0,0,0,344.334,42.039l-272.5,272.5L23.666,456.541A24.844,24.844,0,0,0,29.663,482.25Zm337.3-417.584a56.832,56.832,0,0,1,80.371,80.373L411.5,180.873,331.127,100.5ZM99.744,331.884,308.5,123.127,388.873,203.5,180.116,412.256,58.482,453.518Z' class='ci-primary'/>\"]"],"names":["cilCheckAlt","cilXCircle","useReservationStore","reservations","activeReservations","startLoadingReservations","setActiveReservation","startSavingReservation","useRoomStore","rooms","startFindRooms","useState","visibleRegister","setVisibleRegister","validated","setValidated","useForm","_id","undefined","checkInDate","checkOutDate","roomType","guestName","guestEmail","guestPhone","emergencyContactName","emergencyContactPhone","totalPrice","paid","state","formState","onChangeForm","onResetForm","onLoaderForm","handle_LoadUpdate","data","Date","room","handle_ConfirmAndCanceled","item","Swal","title","showDenyButton","icon","confirmButtonText","denyButtonText","then","result","isConfirmed","checkIn","toISOString","checkOut","jsonData","getTotalPrice","confirm","getDifferenceDay","difference","getTime","Math","ceil","length","price","useEffect","Object","keys","className","sm","fluid","onSubmit","e","form","currentTarget","preventDefault","checkValidity","stopPropagation","xs","name","value","onChange","disabled","type","roomNumber","description","amenities","join","toLocaleUpperCase","color","variant","onClick","align","responsive","scope","map","index","moment","format","cilPencil","uuidv4"],"sourceRoot":""}